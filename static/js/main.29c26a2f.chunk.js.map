{"version":3,"sources":["components/Card.tsx","actions/actionTypes.ts","components/SortCheckbox.tsx","components/SortSearch.tsx","reducers/cardsData.ts","components/SortOption.tsx","App.tsx","reportWebVitals.ts","img/card-img-1.png","img/ThinkCentre M820z.jpg","img/Vivo AiO V222FAK-BA100D.jpg","img/ProDesk 600 G3 SFF.jpg","img/Overlord X83 v09.jpg","img/OptiPlex 3080 MFF.jpg","img/Mac mini 2020.jpg","img/IdeaCentre G5 Gaming 14IMB05.jpg","img/IdeaCentre G5 Gaming 14AMR05.png","img/IdeaCentre AIO 3 24ARE05.jpg","img/I94F.16.S9.166.356.jpg","img/Home 4090.jpg","img/Home 4080.jpg","img/Home 4070.jpg","img/Gaming X51 v12.jpg","img/Game 9010.jpg","img/Cobra I14F.32.H2S4.26.086.jpg","img/Business B25 v26.jpg","img/Business M62 v12.jpg","reducers/cardsReducer.ts","reducers/sortReducer.ts","reducers/filterReducer.ts","reducers/rootReducer.ts","store.ts","index.tsx"],"names":["Card","product","clname","isKey","keyName","keyTyped","hasOwnProperty","priceRendering","price","newPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","currencyDisplay","format","replace","calcDiscount","oldPrice","toFixed","className","bought","added","getFullYear","Date","src","img","alt","data-rating","rating","stars","starClass","partialColor","i","push","height","width","viewBox","id","offset","stopOpacity","fill","d","makingRatingStars","href","reviews","reviewsStr","toString","from2to4","slice","length","from5to20","getWordReviews","stockQuantity","data-old-price","String","fromCharCode","xmlns","LOWER_PRICE","GET_SELECTED_POSTS","GET_SELECTED_RANGE","ADD_FILTER","REMOVE_FILTER","SortCheckbox","sortItem","index","name","useState","isChecked","setIsChecked","dispatch","useDispatch","htmlFor","type","checked","onClick","e","fname","iname","actualIsChecked","console","log","el","target","getAttribute","payload","fieldName","itemName","propertySort","SortSearch","placeholder","SortOption","sortBlock","show","setShow","sortBlockName","data-name","seller","ready","brand","os","status","map","App","products","useSelector","state","filters","sort","tileState","setTileState","quickSort","setQuickSort","sortArrow","setSortArrow","memoProducts","useMemo","a","b","sortOptions","sortBlockArr","filterSection","filter","mapedFilter","fltr","dir","showFilters","version","stroke","x1","y1","x2","y2","strokeWidth","onChange","value","onBlur","selected","cx","cy","r","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","compImgs","osArray","brandArr","compTypes","models","sellers","priceArr","cards","Array","brandGenerate","typeGaneration","model","modelGenerate","serial","serialGenerate","osGenerate","ratingGenerate","priceGenerate","oldPriceGaneration","reviewGenerate","stockQuantityGenerate","boughtGenerate","sellerGenerate","imgGenerate","dateGenerate","min","Math","ceil","max","floor","random","isDiscount","round","serialLength","ranges","ind","startCharCode","charCodeAt","endCharCode","char","randomSeller","endYear","startDate","endDate","cardReducer","action","newCards","cardItem","isTruthy","filterKey","activeFilters","fKey","cardKey","keyFilterArr","cardValue","includesValue","includes","sortReducer","filterReducer","filterNewArr","item","rootState","favorites","store","createStore","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29c26a2f.chunk.js","sourcesContent":["import React from 'react'\r\nimport img1 from './img/card-img-1.png'\r\nimport { CardState } from '../reducers/cardsData'\r\n\r\ninterface CardProps {\r\n  product: CardState,\r\n  clname: boolean,\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({ product, clname }) => {\r\n\r\n  function isKey(keyName: string) {\r\n    const keyTyped = keyName as keyof typeof product\r\n    return product.hasOwnProperty(keyName) ? product[keyTyped] : \"\"\r\n  }\r\n\r\n  function priceRendering(price: number = product.price) {\r\n    if (price > 999){\r\n      let newPrice = new Intl.NumberFormat(\"ua\", \r\n        { \r\n          style: 'currency',\r\n          currency: 'UAH',\r\n          minimumFractionDigits: 0,\r\n          currencyDisplay: \"code\",\r\n        })\r\n      return newPrice.format(price).replace('UAH', \"\")\r\n    }\r\n    return price\r\n  }\r\n\r\n  function makingRatingStars() {\r\n    let stars = []\r\n    let starClass = \"rating__star\"\r\n    let partialColor = 0\r\n    for (let i = 0; i < 5; i++) {\r\n      if (i < product.rating) {\r\n        starClass = \"rating__star_filled\"\r\n        if (product.rating - i > 0 && product.rating - i < 1) { // partial brushing\r\n          starClass = \"rating__star_partial\"\r\n          partialColor = (+(product.rating - i).toFixed(2)) * 100\r\n          // console.log(partialColor)\r\n        }\r\n      } else {\r\n        starClass = \"rating__star\"\r\n      }\r\n      stars.push(\r\n      <svg key={i} height=\"15\" width=\"15\" viewBox=\"0 0 12 12\" className={starClass}>\r\n        {starClass === \"rating__star_partial\" &&\r\n          <linearGradient id={\"rating__partial-brushing_\" + product.id} >\r\n            <stop className=\"rating__partial-brushing_main\" offset={partialColor + \"%\"} stopOpacity=\"1\" />\r\n            <stop className=\"rating__color\" offset={partialColor + 1 + \"%\"} stopOpacity=\"1\" />\r\n            <stop className=\"rating__color\" offset={\"100%\"} stopOpacity=\"1\" />\r\n          </linearGradient>\r\n        }\r\n        <path fill={starClass === \"rating__star_partial\" ? `url('#rating__partial-brushing_${product.id}')` : \"\"} d=\"m5.73433.173217c.10867-.2309559.42269-.2309559.53137 0l1.6246 3.452363c.04311.0917.12659.15527.22303.16998l3.63267.55361c.243.03703.34.35025.1642.53003l-2.62862 2.68729c-.06978.07139-.1017.17425-.08519.275l.62057 3.79451c.04148.2539-.21258.4475-.42991.3276l-3.24916-1.7915c-.08632-.0476-.18944-.0476-.27575 0l-3.24915 1.7915c-.21736.1199-.47141-.0737-.4299-.3276l.62054-3.79451c.01648-.10075-.01538-.20361-.08521-.275l-2.6286226-2.68729c-.1758488-.17978-.0788129-.493.1642076-.53003l3.632665-.55361c.0965-.01471.17992-.07828.22308-.16998z\" />\r\n      </svg>\r\n      )\r\n    }\r\n    return stars\r\n  }\r\n\r\n  function calcDiscount() { // get % of discount\r\n    return +(100 / (product.oldPrice / (product.oldPrice - product.price))).toFixed(0)\r\n  }\r\n\r\n  function getWordReviews() {\r\n    let reviewsStr = product.reviews.toString()\r\n    let from2to4 = +reviewsStr.slice(reviewsStr.length - 1) > 1 && +reviewsStr.slice(reviewsStr.length - 1) < 5 // ends 2 to 4\r\n    let from5to20 = product.reviews > 4 && product.reviews < 21 // number from 5 to 20\r\n    if (+reviewsStr.slice(reviewsStr.length - 1) === 1 && !from5to20) {\r\n      return \"отзыв\"\r\n    } else if (from2to4 && !from5to20) {\r\n      return \"отзыва\"\r\n    } else { return \"отзывов\"}\r\n  }\r\n  // console.log( product.added )\r\n\r\n  return (\r\n    <div className={\"product-card \"  + (!clname ? \"product-card_sm\" : \"product-card_big\")}>\r\n      <div className=\"product-card__badges\">\r\n        {product.bought > 20 && <div className=\"product-card__badge product-card__badge-top\">ТОП ПРОДАЖ</div>}\r\n        {calcDiscount() >= 20 && <div className=\"product-card__badge product-card__badge-discount\">-{calcDiscount()}%</div>}\r\n        {product.added.getFullYear() === new Date().getFullYear() && <div className=\"product-card__badge product-card__badge-novelty\">НОВИНКА</div>}\r\n      </div>\r\n      \r\n      <img className=\"product-card__img\" src={product.img} alt=\"\"/>\r\n      <div className=\"product-card__name\">\r\n        {\r\n          isKey(\"type\") + \" \" + isKey(\"brand\") + \" \" + isKey(\"model\") + \"(\" + isKey(\"serial\") + \")\" + \" \" + isKey(\"os\")\r\n        }\r\n      </div>\r\n      <div className=\"rating\" data-rating={product.rating} >\r\n        {makingRatingStars()}\r\n        {/* {console.log(product.seller)} */}\r\n        <span className=\"rating__reviews\"><a href=\"#\">{product.reviews} {getWordReviews()}</a></span>\r\n      </div>\r\n      <div className={\"product-card__price \" + (product.price != product.oldPrice ? \"product-card__price_discount \" : \" \") + (!product.stockQuantity && \"product-card__price_out-of-stock\")} data-old-price={product.oldPrice > product.price ? priceRendering(product.oldPrice) + String.fromCharCode(0x20B4) : \"\"} >\r\n        {priceRendering()}<span className=\"product-card__price__currency\">{String.fromCharCode(0x20B4)}</span>\r\n        <svg className=\"product-card__price__basket\" viewBox=\"0 -13 456.75885 456\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"m150.355469 322.332031c-30.046875 0-54.402344 24.355469-54.402344 54.402344 0 30.042969 24.355469 54.398437 54.402344 54.398437 30.042969 0 54.398437-24.355468 54.398437-54.398437-.03125-30.03125-24.367187-54.371094-54.398437-54.402344zm0 88.800781c-19 0-34.402344-15.402343-34.402344-34.398437 0-19 15.402344-34.402344 34.402344-34.402344 18.996093 0 34.398437 15.402344 34.398437 34.402344 0 18.996094-15.402344 34.398437-34.398437 34.398437zm0 0\" />\r\n          <path d=\"m446.855469 94.035156h-353.101563l-7.199218-40.300781c-4.4375-24.808594-23.882813-44.214844-48.699219-48.601563l-26.101563-4.597656c-5.441406-.96875-10.632812 2.660156-11.601562 8.097656-.964844 5.441407 2.660156 10.632813 8.101562 11.601563l26.199219 4.597656c16.53125 2.929688 29.472656 15.871094 32.402344 32.402344l35.398437 199.699219c4.179688 23.894531 24.941406 41.324218 49.199219 41.300781h210c22.0625.066406 41.546875-14.375 47.902344-35.5l47-155.800781c.871093-3.039063.320312-6.3125-1.5-8.898438-1.902344-2.503906-4.859375-3.980468-8-4zm-56.601563 162.796875c-3.773437 12.6875-15.464844 21.367188-28.699218 21.300781h-210c-14.566407.039063-27.035157-10.441406-29.5-24.800781l-24.699219-139.398437h336.097656zm0 0\" />\r\n          <path d=\"m360.355469 322.332031c-30.046875 0-54.402344 24.355469-54.402344 54.402344 0 30.042969 24.355469 54.398437 54.402344 54.398437 30.042969 0 54.398437-24.355468 54.398437-54.398437-.03125-30.03125-24.367187-54.371094-54.398437-54.402344zm0 88.800781c-19 0-34.402344-15.402343-34.402344-34.398437 0-19 15.402344-34.402344 34.402344-34.402344 18.996093 0 34.398437 15.402344 34.398437 34.402344 0 18.996094-15.402344 34.398437-34.398437 34.398437zm0 0\" />\r\n        </svg>\r\n      </div>\r\n      <div className={product.stockQuantity ? \"product-card__available\" : \"product-card__out-of-stock\"}>{product.stockQuantity ? \"Есть в наличии\" : \"Товар отсутствует\"}</div>\r\n    </div>\r\n  )\r\n}\r\n","export const LOWER_PRICE: string = \"LOWER_PRICE\"\r\nexport const HIGHER_PRICE: string = \"HIGHER_PRICE\"\r\nexport const GET_SELECTED_POSTS: string = \"GET SELECTED POSTS\"\r\nexport const GET_SELECTED_RANGE: string = \"GET SELECTED RANGE\"\r\nexport const ADD_FILTER: string = \"ADD_FILTER\"\r\nexport const REMOVE_FILTER: string = \"REMOVE_FILTER\"","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { LOWER_PRICE, GET_SELECTED_POSTS, GET_SELECTED_RANGE, ADD_FILTER, REMOVE_FILTER } from '../actions/actionTypes'\r\n\r\ninterface SortCheckboxProps {\r\n  sortItem: string,\r\n  index: number,\r\n  name: string\r\n}\r\n\r\nexport const SortCheckbox: React.FC<SortCheckboxProps> = ({sortItem, index, name}) => {\r\n  const [isChecked, setIsChecked] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function propertySort(fname: string, iname: string, e: React.MouseEvent<Element>) {\r\n    let actualIsChecked = !isChecked\r\n    console.log(\"This is fname: \" + fname + \" iname: \" + iname)\r\n\r\n    const el = e.target as HTMLInputElement\r\n    console.log(el.getAttribute(\"checked\"))\r\n\r\n    if (actualIsChecked) {\r\n      dispatch({\r\n        type: ADD_FILTER, \r\n        payload: {\r\n          fieldName: fname, \r\n          itemName: iname,\r\n        }\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: REMOVE_FILTER, \r\n        payload: {\r\n          fieldName: fname, \r\n          itemName: iname,\r\n        }\r\n      })\r\n    }\r\n\r\n    \r\n    dispatch({\r\n      type: GET_SELECTED_POSTS, \r\n      payload: {\r\n        fieldName: fname, \r\n        itemName: iname,\r\n      }\r\n    })\r\n\r\n    setIsChecked(actualIsChecked)\r\n  }\r\n\r\n  return (\r\n    <li key={index} >\r\n      <label htmlFor={\"sort\" + sortItem} >\r\n        <input type=\"checkbox\" name=\"\" checked={isChecked}\r\n          id={\"sort\" + sortItem} \r\n          onClick={ (e) => propertySort(name, sortItem, e)} />\r\n        {sortItem}\r\n      </label>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SortSearch() {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" className=\"sort-block__input\" placeholder=\"in developing\" />\r\n      <label className=\"sort-block__subtitle\">Алфавитный указатель</label>\r\n    </div>\r\n  )\r\n}\r\n","import comp1 from '../img/card-img-1.png'\r\nimport comp2 from '../img/ThinkCentre M820z.jpg'\r\nimport comp3 from '../img/Vivo AiO V222FAK-BA100D.jpg'\r\nimport comp4 from '../img/ProDesk 600 G3 SFF.jpg'\r\nimport comp5 from '../img/Overlord X83 v09.jpg'\r\nimport comp6 from '../img/OptiPlex 3080 MFF.jpg'\r\nimport comp7 from '../img/Mac mini 2020.jpg'\r\nimport comp8 from '../img/IdeaCentre G5 Gaming 14IMB05.jpg'\r\nimport comp9 from '../img/IdeaCentre G5 Gaming 14AMR05.png'\r\nimport comp10 from '../img/IdeaCentre AIO 3 24ARE05.jpg'\r\nimport comp11 from '../img/I94F.16.S9.166.356.jpg'\r\nimport comp12 from '../img/Home 4090.jpg'\r\nimport comp13 from '../img/Home 4080.jpg'\r\nimport comp14 from '../img/Home 4070.jpg'\r\nimport comp15 from '../img/Gaming X51 v12.jpg'\r\nimport comp16 from '../img/Game 9010.jpg'\r\nimport comp17 from '../img/Cobra I14F.32.H2S4.26.086.jpg'\r\nimport comp18 from '../img/Business B25 v26.jpg'\r\nimport comp19 from '../img/Business M62 v12.jpg'\r\n\r\nconst compImgs: string[] = [comp1, comp2, comp3, comp4, comp5, comp6, comp7, comp8, comp9, comp10,\r\n  comp11, comp12, comp13, comp14, comp15, comp16, comp17, comp18, comp19] // array of images\r\n\r\nexport const osArray: string[] = [\r\n  \"\",\r\n  \"DOS\",\r\n  \"Windows XP\",\r\n  \"Windows 8\",\r\n  \"Windows 10\",\r\n  \"Windows 10 Pro\",\r\n  \"Windows Server\",\r\n  \"Linux\",\r\n  \"Mac OS\",\r\n]\r\n\r\nexport const brandArr: string[] = [\"AMD\", \"ARTLINE\", \"Acer\", \"Apple\", \"ASUS\", \"Cobra\", \"Dell\", \"Everest\", \"HP\", \"Lenovo\", \"Samsung\",]\r\nexport const compTypes: string[] = [\"Моноблок\", \"Компьютер\", \"Компьютер игровой\", \"Системный блок\", \"Тонкий клиент\"]\r\nconst models: string[] = [\"ThinkCentre M820z\", \"Home 4090\", \"290 G1 MT\", \"Home 4070\", \"Gaming X51 v12\", \"IdeaCentre AIO 3 24ARE05\", \"ProDesk 600 G3 SFF\", \"IdeaCentre G5 Gaming 14IMB05\", \"Vivo AiO V222FAK-BA100D\", \"Business B25 v26\", \"IdeaCentre G5 Gaming 14AMR05\", \"Mac mini 2020\", \"Game 9010\", \"I94F.16.S9.166.356\", \"OptiPlex 3080 MFF\", \"Home 4080\", \"Cobra I14F.32.H2S4.26.086\", \"Business M62 v12\", \"Overlord X83 v09\"]\r\nconst sellers: string[] = [\"D-TOP\", \"DonKarmani\", \"! E v r i c a\", \"Shop Stock\", \"Vendedor\", \"ALFA Render\", \"SVIT integration\", \"Sparch\", \"Red2Shop\", \"TechnoPromo\", \"Aiver\", \"Tigr\", \"DIGITALFPS\", \"BIG&FAST\", \"Techno department\"]\r\n\r\nexport type CardState = {\r\n  id: number,\r\n  brand: string,\r\n  type: string,\r\n  model: string,\r\n  serial: string,\r\n  os?: string,\r\n  rating: number,\r\n  price: number,\r\n  oldPrice: number,\r\n  reviews: number,\r\n  stockQuantity: number,\r\n  bought: number,\r\n  seller: string,\r\n  img: string,\r\n  added: Date,\r\n}\r\n\r\nexport interface CardsState extends Array<CardState>{}\r\n\r\nlet id: number = 1\r\nlet priceArr: Array<number> = []\r\n\r\nexport const cards = new Array(50) // write how many cards you want to create\r\n\r\nfor (let i = 0; i < cards.length; i++) {\r\n  cards[i] = {\r\n    id: id++,\r\n    brand: brandGenerate(),\r\n    type: typeGaneration(),\r\n    model: modelGenerate(),\r\n    serial: serialGenerate(),\r\n    os: osGenerate(),\r\n    rating: ratingGenerate(),\r\n    price: priceGenerate(),\r\n    oldPrice: oldPriceGaneration(),\r\n    reviews: reviewGenerate(),\r\n    stockQuantity: stockQuantityGenerate(),\r\n    bought: boughtGenerate(),\r\n    seller: sellerGenerate(),\r\n    img: imgGenerate(),\r\n    added: new Date(dateGenerate()),\r\n  }\r\n}\r\n\r\n// export const cards = [\r\n//   {\r\n//     id: id++,\r\n//     brand: brandGenerate(),\r\n//     type: typeGaneration(),\r\n//     model: modelGenerate(),\r\n//     serial: serialGenerate(),\r\n//     os: osGenerate(),\r\n//     rating: ratingGenerate(),\r\n//     price: priceGenerate(),\r\n//     oldPrice: oldPriceGaneration(),\r\n//     reviews: reviewGenerate(),\r\n//     stockQuantity: stockQuantityGenerate(),\r\n//     bought: boughtGenerate(),\r\n//     seller: sellerGenerate(),\r\n//     img: imgGenerate(),\r\n//     added: new Date(dateGenerate()),\r\n//   },\r\n//   {\r\n//     id: id++,\r\n//     brand: brandGenerate(),\r\n//     type: typeGaneration(),\r\n//     model: modelGenerate(),\r\n//     serial: serialGenerate(),\r\n//     os: osGenerate(),\r\n//     rating: ratingGenerate(),\r\n//     price: priceGenerate(),\r\n//     oldPrice: oldPriceGaneration(),\r\n//     reviews: reviewGenerate(),\r\n//     stockQuantity: stockQuantityGenerate(),\r\n//     bought: boughtGenerate(),\r\n//     seller: sellerGenerate(),\r\n//     img: imgGenerate(),\r\n//     added: new Date(dateGenerate()),\r\n//   },\r\n//   {\r\n//     id: id++,\r\n//     brand: brandGenerate(),\r\n//     type: typeGaneration(),\r\n//     model: modelGenerate(),\r\n//     serial: serialGenerate(),\r\n//     os: osGenerate(),\r\n//     rating: ratingGenerate(),\r\n//     price: priceGenerate(),\r\n//     oldPrice: oldPriceGaneration(),\r\n//     reviews: reviewGenerate(),\r\n//     stockQuantity: stockQuantityGenerate(),\r\n//     bought: boughtGenerate(),\r\n//     seller: sellerGenerate(),\r\n//     img: imgGenerate(),\r\n//     added: new Date(dateGenerate()),\r\n//   },\r\n//   {\r\n//     id: id++,\r\n//     brand: brandGenerate(),\r\n//     type: typeGaneration(),\r\n//     model: modelGenerate(),\r\n//     serial: serialGenerate(),\r\n//     os: osGenerate(),\r\n//     rating: ratingGenerate(),\r\n//     price: priceGenerate(),\r\n//     oldPrice: oldPriceGaneration(),\r\n//     reviews: reviewGenerate(),\r\n//     stockQuantity: stockQuantityGenerate(),\r\n//     bought: boughtGenerate(),\r\n//     seller: sellerGenerate(),\r\n//     img: imgGenerate(),\r\n//     added: new Date(dateGenerate()),\r\n//   },\r\n// ]\r\n\r\nfunction typeGaneration() {\r\n  let min = Math.ceil(0)\r\n  let max = Math.floor(compTypes.length - 1)\r\n  return compTypes[Math.floor(Math.random() * (max - min + 1) + min)] //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\n\r\nfunction priceGenerate(min: number = 5000, max: number = 100000) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  let price = Math.floor(Math.random() * (max - min + 1) + min)\r\n  priceArr.push(price)\r\n  return price //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nfunction oldPriceGaneration(max: number = 100000) {\r\n  let isDiscount = Math.round(Math.random())  // 50% chance to get a discount or not\r\n  let price: number = priceArr[id-2]  // -1 because index starts from 0, and -1 again because key \"id\" in object has id++ \r\n  if (isDiscount) {\r\n    let min = Math.ceil(price)\r\n    max = Math.floor(max)\r\n    price = Math.floor(Math.random() * (max - min + 1) + min) //The maximum is inclusive and the minimum is inclusive\r\n  }\r\n  return price\r\n}\r\n\r\nfunction ratingGenerate(min: number = 0, max: number = 5) {\r\n  return +(Math.random() * (max - min) + min).toFixed(2) //Number limited to hundredths\r\n}\r\n\r\nfunction reviewGenerate(min: number = 0, max: number = 200) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min + 1) + min) //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nfunction osGenerate() {\r\n  let min = Math.ceil(0)\r\n  let max = Math.floor(osArray.length)\r\n  return osArray[Math.floor(Math.random() * (max - min) + min)] //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction brandGenerate() {\r\n  let min = Math.ceil(0)\r\n  let max = Math.floor(brandArr.length)\r\n  return brandArr[Math.floor(Math.random() * (max - min) + min)]\r\n}\r\n\r\nfunction stockQuantityGenerate(min: number = 0, max: number = 10) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min + 1) + min) //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\n\r\n\r\nfunction serialGenerate() {\r\n  let min = Math.ceil(7)                                            // minimum characters in the serial number\r\n  let max = Math.floor(10)                                          // maximum characters in the serial number\r\n  let serialLength = Math.floor(Math.random() * (max - min + 1) + min)\r\n  const ranges = [ [\"A\", \"Z\"], [\"0\", \"9\"] ]\r\n  let serial = \"\";                                                       // the string (initialized to \"\")\r\n\r\n  while(serialLength--) {                                             // repeat this length of times\r\n    let ind = Math.floor(Math.random() * ranges.length);              // get a random range from the ranges object\r\n    let startCharCode = ranges[ind][0].charCodeAt(0),                           // get the minimum char code allowed for this range\r\n        endCharCode = ranges[ind][1].charCodeAt(0);                           // get the maximum char code allowed for this range\r\n    let char = Math.floor(Math.random() * (endCharCode - startCharCode + 1)) + startCharCode;        // get a random char code between min and max\r\n    serial += String.fromCharCode(char);                                    // convert it back into a character and append it to the string \r\n  }\r\n  return serial\r\n}\r\n\r\nfunction modelGenerate() {\r\n  let min = 0\r\n  let max = models.length\r\n  return models[Math.floor(Math.random() * (max - min) + min)]\r\n}\r\n\r\nfunction boughtGenerate(min: number = 0, max: number = 100) { // min and max must be integers\r\n  return Math.floor(Math.random() * (max - min + 1) + min) //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nfunction sellerGenerate() {\r\n  let isRozetka = Math.round(Math.random() * (100 / 20) - Math.random()) // 20 is %, change it to set how often seller \"Rozetka\" will appear\r\n  let randomSeller = \"Rozetka\"\r\n  if (!isRozetka) {\r\n    let min = 0\r\n    let max = sellers.length - 1\r\n    randomSeller = sellers[Math.floor(Math.random() * (max - min + 1) + min)] //The maximum is inclusive and the minimum is inclusive\r\n  }\r\n  return randomSeller \r\n}\r\n\r\nfunction imgGenerate() {\r\n  let min = 0\r\n  let max = compImgs.length - 1\r\n  return compImgs[Math.floor(Math.random() * (max - min + 1) + min)]\r\n}\r\n\r\nfunction dateGenerate() {\r\n  let startYear = 2005 // edit just year to set start year (4 digits)\r\n  let endYear = +(new Date().getFullYear()) // edit just year to set end year (4 digits)\r\n  let startMonth = 0 // edit just month to set start month (from 1 to 2 digits)\r\n  let endMonth = 12 // edit just month to set end month (from 1 to 2 digits)\r\n  let startDay = 1 // edit just day to set start day (from 1 to 31) (if there are not so many days in a month, then the days will be carried over to the next month)\r\n  let endDay = 31 // edit just day to set end day (from 1 to 31) (if there are not so many days in a month, then the days will be carried over to the next month)\r\n  let startDate = +(new Date(startYear, startMonth, startDay))\r\n  let endDate = +(new Date(endYear, endMonth, endDay))\r\n  \r\n  let randomDate = Math.floor(Math.random() * (endDate - startDate + 1) + startDate)\r\n  return randomDate\r\n//  let randomDate = new Date(3600 * 24 * 1000) // multiply by 1000 to set counter in seconds\r\n}","import React, { DOMElement, useState, MouseEvent } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { SortState } from '../reducers/sortReducer';\r\n\r\nimport { SortCheckbox } from './SortCheckbox';\r\nimport SortSearch from './SortSearch';\r\n\r\ninterface SortProps {\r\n  name: string,\r\n  sortBlock: string[],\r\n}\r\n\r\n\r\n\r\nexport const SortOption: React.FC<SortProps> = ({ name, sortBlock }) => {\r\n  const [show, setShow] = useState(true)\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  const sortNames = {\r\n    seller: \"Продавец\",\r\n    ready: \"Готов к отправке\",\r\n    type: \"Вид\",\r\n    brand: \"Бренд\",\r\n    os: \"ОС\",\r\n    price: \"Цена\",\r\n    status: \"Статус\",\r\n  }\r\n  let sortBlockName = name as keyof typeof sortNames\r\n\r\n  return (\r\n    <li className=\"sort-block\">\r\n      <input className=\"sort-block__switcher\" type=\"checkbox\" name=\"\" id={name} checked={show} onClick={ () => setShow(!show) } />\r\n      <div className={\"sort-block__nested \" + (show ? \"sort-block__nested_open\" : \"sort-block__nested_closed\")} data-name={name} >\r\n        <label className=\"sort-block__header\" htmlFor={name}>\r\n          {sortNames[sortBlockName]}\r\n          <span className=\"sort-block__header__quantity\" >{sortBlock.length > 0 && sortBlock.length}</span>\r\n        </label>\r\n        { sortBlock.length > 5 && <SortSearch />}\r\n        <ul className=\"sort-block__list ssort-block__brands\">\r\n          {sortBlock.map( (sortItem, i:number) => <SortCheckbox sortItem={sortItem} index={i} name={name} /> )}\r\n        </ul>\r\n      </div>\r\n      \r\n    </li>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.scss';\nimport { Card } from './components/Card';\nimport { CardsState } from './reducers/cardsData';\nimport { RootState } from './reducers/rootReducer';\nimport { SortState } from './reducers/sortReducer';\nimport { FilterState } from './reducers/filterReducer';\nimport { SortOption } from './components/SortOption';\n\nlet mockState = {\n  products: [],\n  reviews: [],\n  favorites: [],\n  comparison: [],\n}\n\n\nconst App: React.FC = () => {\n  const products = useSelector<RootState, CardsState>( state => state.products )\n  const filters = useSelector<RootState, FilterState>( state => state.filters )\n  const sort = useSelector<RootState, SortState>( state => state.sort )\n  const [tileState, setTileState] = useState(true)  \n  const [quickSort, setQuickSort] = useState(\"rating\")\n  const [sortArrow, setSortArrow] = useState(false)\n\n  const memoProducts = useMemo( () => { \n    switch (quickSort){\n      case \"rating\":\n        products.sort( (a, b) => (a.rating - b.rating) * -1)\n        break\n      case \"lowest-price\":\n        products.sort( (a, b) => a.price - b.price)\n        break\n      case \"highest-price\":\n        products.sort( (a, b) => (a.price - b.price) * -1) // reverse the array by multiplying by -1\n        break\n      case \"most-bought\":\n        products.sort( (a, b) => (a.bought - b.bought) * -1)\n        break\n      case \"largest-discount\":\n        products.sort( (a, b) => ( 100 / (a.oldPrice / (a.oldPrice - a.price)) - 100 / (b.oldPrice / (b.oldPrice - b.price))) * -1)\n        break\n      case \"new-items\":\n        products.sort( (a, b) => (+a.added - +b.added) * -1)\n        break\n      default:\n        console.log(\"undefined quickSort option\")\n    }\n    return products.map( product => <Card key={product.id} product={product} clname={tileState} /> )\n  }, [products, quickSort, tileState])\n\n  function quickSortFunc(bool: boolean = false) {\n    setSortArrow(!sortArrow)\n  }\n  \n  const sortOptions = []\n\n  for (let sortBlock in sort){ // create sort options on the left side\n    let sortBlockArr = sortBlock as keyof typeof sort\n    sortOptions.push(<SortOption key={sortOptions.length + 1} name={sortBlock} sortBlock={sort[sortBlockArr]} />)\n  }\n\n  function showFilters() {\n    let filterSection = []\n    for (let filter in filters) {\n      let filterName = filter as keyof typeof filters\n      let mapedFilter = filters[filterName].map( fltr => <span className=\"active-filters__item\">{fltr}</span>)\n      filterSection.push(...mapedFilter)\n      console.log(\"Show filters\")\n      console.dir(filterSection)\n    }\n\n    return filterSection\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"section-title\">Компьютеры</h1>\n      <div className=\"quick-sort\">\n        <div className=\"active-filters\">Active filters: {showFilters()}</div>\n        <label className=\"quick-sort__select-label\" htmlFor=\"\">\n          <svg className={\"quick-sort__select__arrow \" + (sortArrow && \"quick-sort__select__arrow_active\")} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 16\"  fill=\"#449de1\" stroke=\"#449de1\">\n          <g>\n            <line x1=\"0\" y1=\"0\" x2=\"8\" y2=\"8\" strokeWidth=\"2\" />\n            <line x1=\"8\" y1=\"8\" x2=\"0\" y2=\"16\" strokeWidth=\"2\" />\n          </g>\n          </svg> \n          <select className={\"quick-sort__select \" + (sortArrow && \"quick-sort__select_active\")} \n                  name={quickSort} id=\"\" \n                  onChange={ (e) => setQuickSort(e.target.value)} \n                  onClick={ () => setSortArrow(!sortArrow) }\n                  onBlur={ () => setSortArrow(false) } \n                  >\n            <option value=\"lowest-price\" selected={quickSort == \"lowest-price\"} >От дешевых к дорогим</option>\n            <option value=\"highest-price\" selected={quickSort == \"highest-price\"} >От дорогих к дешевым</option>\n            <option value=\"most-bought\" selected={quickSort == \"most-bought\"} >Популярные</option>\n            <option value=\"new-items\" selected={quickSort == \"new-items\"} >Новинки</option>\n            <option value=\"largest-discount\" selected={quickSort == \"largest-discount\"} >Акционные</option>\n            <option value=\"rating\" selected={quickSort == \"rating\"} >По рейтингу</option>\n          </select>\n        </label>\n        \n        <label className=\"quick-sort__radio-label\" htmlFor=\"\">\n          <input className=\"quick-sort__radio quick-sort__radio_left\" type=\"radio\" name=\"quick-sort_size\" id=\"\" value=\"product-list_sm\" checked={tileState} onChange={ e => setTileState(!tileState) } />\n          <svg className=\"radio-img-less\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 20\">\n            <circle cx=\"10\" cy=\"5\" r=\"1\" />\n            <circle cx=\"15\" cy=\"5\" r=\"1\" />\n            <circle cx=\"20\" cy=\"5\" r=\"1\" />\n            <circle cx=\"10\" cy=\"10\" r=\"1\" />\n            <circle cx=\"15\" cy=\"10\" r=\"1\" />\n            <circle cx=\"20\" cy=\"10\" r=\"1\" />\n            <circle cx=\"10\" cy=\"15\" r=\"1\" />\n            <circle cx=\"15\" cy=\"15\" r=\"1\" />\n            <circle cx=\"20\" cy=\"15\" r=\"1\" />\n          </svg>\n        </label>\n        \n        <label className=\"quick-sort__radio-label\" htmlFor=\"\">\n          <input className=\"quick-sort__radio quick-sort__radio_right\" type=\"radio\" name=\"quick-sort_size\" id=\"\" value=\"product-list_big\" checked={!tileState} onChange={ e => setTileState(!tileState) } />\n          <svg className=\"radio-img-more\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 35 25\">\n            <circle cx=\"10\" cy=\"5\" r=\"1\" />\n            <circle cx=\"15\" cy=\"5\" r=\"1\" />\n            <circle cx=\"20\" cy=\"5\" r=\"1\" />\n            <circle cx=\"25\" cy=\"5\" r=\"1\" />\n            <circle cx=\"10\" cy=\"10\" r=\"1\" />\n            <circle cx=\"15\" cy=\"10\" r=\"1\" />\n            <circle cx=\"20\" cy=\"10\" r=\"1\" />\n            <circle cx=\"25\" cy=\"10\" r=\"1\" />\n            <circle cx=\"10\" cy=\"15\" r=\"1\" />\n            <circle cx=\"15\" cy=\"15\" r=\"1\" />\n            <circle cx=\"20\" cy=\"15\" r=\"1\" />\n            <circle cx=\"25\" cy=\"15\" r=\"1\" />\n            <circle cx=\"10\" cy=\"20\" r=\"1\" />\n            <circle cx=\"15\" cy=\"20\" r=\"1\" />\n            <circle cx=\"20\" cy=\"20\" r=\"1\" />\n            <circle cx=\"25\" cy=\"20\" r=\"1\" />\n          </svg>\n        </label>\n      </div>\n      <div className=\"content\">\n        <ul className=\"sort-options\">\n          {sortOptions}\n        </ul>\n        <section>\n          <div className=\"product-list \">\n            {memoProducts}\n          </div>\n        </section>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/card-img-1.67c5c1a1.png\";","export default __webpack_public_path__ + \"static/media/ThinkCentre M820z.e5f4e6c5.jpg\";","export default __webpack_public_path__ + \"static/media/Vivo AiO V222FAK-BA100D.b8a0067a.jpg\";","export default __webpack_public_path__ + \"static/media/ProDesk 600 G3 SFF.c6e7af34.jpg\";","export default __webpack_public_path__ + \"static/media/Overlord X83 v09.ae95142e.jpg\";","export default __webpack_public_path__ + \"static/media/OptiPlex 3080 MFF.a1b326f6.jpg\";","export default __webpack_public_path__ + \"static/media/Mac mini 2020.b80f1f8d.jpg\";","export default __webpack_public_path__ + \"static/media/IdeaCentre G5 Gaming 14IMB05.3af00d59.jpg\";","export default __webpack_public_path__ + \"static/media/IdeaCentre G5 Gaming 14AMR05.2f6feffd.png\";","export default __webpack_public_path__ + \"static/media/IdeaCentre AIO 3 24ARE05.c29ed3c3.jpg\";","export default __webpack_public_path__ + \"static/media/I94F.16.S9.166.356.0c9c6ab1.jpg\";","export default __webpack_public_path__ + \"static/media/Home 4090.7505f3bb.jpg\";","export default __webpack_public_path__ + \"static/media/Home 4080.bdd32929.jpg\";","export default __webpack_public_path__ + \"static/media/Home 4070.ee85ed38.jpg\";","export default __webpack_public_path__ + \"static/media/Gaming X51 v12.f60d17e8.jpg\";","export default __webpack_public_path__ + \"static/media/Game 9010.836ac37f.jpg\";","export default __webpack_public_path__ + \"static/media/Cobra I14F.32.H2S4.26.086.9f5d9bfc.jpg\";","export default __webpack_public_path__ + \"static/media/Business B25 v26.59f2d2d5.jpg\";","export default __webpack_public_path__ + \"static/media/Business M62 v12.6388f7a5.jpg\";","import { LOWER_PRICE, GET_SELECTED_POSTS, GET_SELECTED_RANGE } from '../actions/actionTypes'\r\nimport { CardsState, cards } from './cardsData'\r\n\r\ninterface PayloadType {\r\n  fieldName: string, \r\n  itemName: string,\r\n}\r\n\r\ninterface Actiontype {\r\n  type: string, \r\n  payload: PayloadType, \r\n  activeFilters: object\r\n}\r\n\r\nexport default function cardReducer(state: CardsState = cards, action: Actiontype) {\r\n  switch (action.type){\r\n    case LOWER_PRICE:\r\n      return [...cards]\r\n    case GET_SELECTED_POSTS:\r\n      let fieldName = action.payload.fieldName\r\n      let itemName = action.payload.itemName\r\n\r\n      let newCards = cards.filter( (cardItem: Object) => {\r\n        let isTruthy = true\r\n\r\n        // checking each key in filters\r\n        for (let filterKey in action.activeFilters) {\r\n          let fKey = filterKey as keyof typeof action.activeFilters\r\n          let cardKey = filterKey as keyof typeof cardItem\r\n          let keyFilterArr: [] = action.activeFilters[fKey]\r\n          let cardValue = cardItem[cardKey]\r\n\r\n          // if no parameters in keyArr, return true (isTruthy left true) \r\n          if (keyFilterArr.length > 0) {\r\n            if (typeof cardValue == \"string\" || typeof cardValue == \"number\") {\r\n              let includesValue = keyFilterArr.includes(cardValue)\r\n              isTruthy = isTruthy && includesValue ? true : false\r\n            }\r\n          }\r\n        }\r\n        return isTruthy\r\n      })\r\n\r\n      return [...newCards]\r\n    case GET_SELECTED_RANGE:\r\n      return [...cards]\r\n    default:\r\n      console.log(`unrecognized in cardReducer: ${action.type}`)\r\n      return [...cards]\r\n  }\r\n}\r\n","import { LOWER_PRICE } from '../actions/actionTypes'\r\nimport { compTypes, brandArr, osArray } from './cardsData'\r\n\r\nexport interface SortState {\r\n  seller: string[],\r\n  type: string[],\r\n  brand: string[],\r\n  os: string[], \r\n}\r\n\r\nconst sort = {\r\n  seller: [\"Rozetka\", \"Other sellers\"],\r\n  ready: [\"Готов к отправке\"],\r\n  type: compTypes,\r\n  brand: brandArr,\r\n  os: osArray,\r\n  price: [],\r\n  status: [\"Are available\", \"Not available\", \"Ended up\"]\r\n}\r\n\r\nexport default function sortReducer(state: SortState = sort, action: { type: string}) {\r\n  switch (action.type){\r\n    case LOWER_PRICE:\r\n      return {...sort}\r\n    default:\r\n      console.log(`unrecognized ${action.type}`)\r\n      return {...sort}\r\n  }\r\n}","import { ADD_FILTER, REMOVE_FILTER } from '../actions/actionTypes'\r\n\r\nexport interface FilterState {\r\n  seller: string[],\r\n  type: string[],\r\n  brand: string[],\r\n  os: string[], \r\n}\r\n\r\n//type FilterType = FilterState | object\r\n\r\nexport const filters = {\r\n  seller: [],\r\n  // ready: [],\r\n  type: [],\r\n  brand: [],\r\n  os: [],\r\n  price: [],\r\n  // status: [],\r\n}\r\n\r\n\r\nexport interface ActionType {\r\n  type: string, \r\n  payload: {\r\n    fieldName: string, \r\n    itemName: string,\r\n  },\r\n}\r\n\r\nexport default function filterReducer(state: FilterState = filters, action: ActionType) {\r\n  let filterKey\r\n  let filterNewArr\r\n  switch (action.type){\r\n    case ADD_FILTER:\r\n      filterKey = action.payload.fieldName as keyof typeof state\r\n      filterNewArr = state[filterKey].slice()\r\n      filterNewArr.push(action.payload.itemName)\r\n      return {...state, [action.payload.fieldName]: [...filterNewArr]}\r\n    case REMOVE_FILTER:\r\n      filterKey = action.payload.fieldName as keyof typeof state\r\n      filterNewArr = state[filterKey].slice()\r\n      filterNewArr = filterNewArr.filter( item => item !== action.payload.itemName)\r\n      return {...state, [action.payload.fieldName]: [...filterNewArr]}\r\n    default:\r\n      console.log(`unrecognized ${action.type}`)\r\n      return {...state}\r\n  }\r\n\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cardReducer from \"./cardsReducer\";\r\nimport sortReducer from \"./sortReducer\";\r\nimport filterReducer, { ActionType as FilterActionType, FilterState, filters } from \"./filterReducer\";\r\n\r\ninterface rootReducerTypes {\r\n  products: any[],\r\n  sort: object,\r\n  filters: FilterState,\r\n  reviews?: object,\r\n  favorites?: object,\r\n}\r\n/*\r\nexport const rootReducer = combineReducers({\r\n  products: cardReducer,\r\n  sort: sortReducer,\r\n  filters: filterReducer,\r\n  // reviews: [],\r\n  // favorites: [],\r\n  \r\n});\r\n*/\r\n\r\n\r\ninterface PayloadType {\r\n  fieldName: string, \r\n  itemName: string,\r\n}\r\n\r\ninterface ActionType {\r\n  type: string,\r\n  payload?: PayloadType,\r\n  activeFilters?: object,\r\n}\r\n\r\nconst rootState = {\r\n  products: [],\r\n  sort: {},\r\n  filters: filters,\r\n  reviews: {},\r\n  favorites: {},\r\n}\r\n\r\nexport const rootReducer = (state: rootReducerTypes = rootState, action: any) => {\r\n  const activeFilters = state.filters\r\n  return {\r\n    products: cardReducer(undefined, {...action, activeFilters}),\r\n    sort: sortReducer(undefined, action),\r\n    filters: filterReducer(state.filters, action),\r\n  }\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { createStore } from \"redux\";\r\nimport { rootReducer } from './reducers/rootReducer'\r\n\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}